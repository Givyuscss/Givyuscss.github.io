I"&6<h2 id="pca">PCA</h2>

<p>PCA主要是用于处理数据冗杂问题，功能是数据降维</p>

<h3 id="pca数学原理">PCA数学原理</h3>
<p>对于数据集<script type="math/tex">X,\forall x_i \in X, x \in \mathbb{R}^d</script>，每个数据都是d维的，d维特征过于冗杂，且大部分是无用的信息，因此，需要对其进行降维，提取中区分度大的特征，原数据集映射至低维空间。</p>

<p>需要用到的方法为基变换，一个mxn的矩阵，m个数据，每个数据n个特征，需要将其降维至k个特征，则需要n个k维基。</p>

<ul>
  <li>首先向量<script type="math/tex">x</script>在<script type="math/tex">\vec{v}</script>方向上的投影为：</li>
</ul>

<script type="math/tex; mode=display">\rho(x)=\frac{\vec{v}^Tx}{\|\vec{v}\|}</script>

<ul>
  <li>当$\vec{v}$是单位向量时，则投影为：</li>
</ul>

<script type="math/tex; mode=display">\rho(x)=\vec{v}^Tx</script>

<ul>
  <li>设数据集为<script type="math/tex">X_{m\times n}</script>,可将变化后的投影集体设为<script type="math/tex">Xv</script>，在各个方向上的投影点越分散，方差越大，则说明这个特征对与数据集保存的信息量越多</li>
  <li>在此之前，数据集每列特征进行去均值化处理，所以使得<script type="math/tex">\mu(X,v)=0</script></li>
  <li>而经过投影变化后的信息量为:</li>
</ul>

<script type="math/tex; mode=display">info(X,v)=\sigma^2(X,v)=\frac{1}{m}\sum^{m}_{i=1}(v^Tx_i-\mu)^2=\frac{1}{m}(Xv)^TXv=\frac{1}{m}v^TX^TXv</script>

<ul>
  <li>由于<script type="math/tex">X</script>是去均值后的矩阵，<script type="math/tex">\frac{1}{m}X^TX</script>即为<script type="math/tex">X</script>的协方差矩阵，记为C,则<script type="math/tex">info(X,v)=v^TCv</script></li>
  <li>又因为约束条件为<script type="math/tex">v</script>为单位向量，所以<script type="math/tex">v^Tv=1</script>，用拉格朗日乘子法将约束直接加入目标函数，则:</li>
</ul>

<script type="math/tex; mode=display">info(X,v)=v^TCv-\lambda(v^Tv-1)</script>

<ul>
  <li>对<script type="math/tex">info(X,v)求v偏导</script>，则:</li>
</ul>

<script type="math/tex; mode=display">\frac{\partial info(X,v)}{\partial v}=2Cv-2\lambda v=0</script>

<p>    则<script type="math/tex">Cv=\lambda v</script></p>

<ul>
  <li>该式符合矩阵特征值和特征向量的性质，可以的出此时满足条件的<script type="math/tex">\lambda,v</script>即为协方差矩阵的特征值和对应的特征向量。</li>
  <li>将其带入<script type="math/tex">info(X,v)=v^TCv</script>得到<script type="math/tex">info(X,v)=v^T\lambda v=\lambda v^Tv=\lambda</script></li>
  <li>至此证毕，经过投影后保存的信息量为协方差矩阵的特征值大小，而变换基为对应的特征向量。</li>
  <li>选取前k个特征值对应的特征向量组成基矩阵P</li>
  <li>则变换后的数据集为<script type="math/tex">new\_X = XP</script></li>
</ul>

<h3 id="实例">实例</h3>

<p>lris数据集包含150个数据集，分为3类Setosa(山鸢尾)，Versicolour(变色鸢尾)，Virginica（维吉尼亚鸢尾），每类50个数据，每个数据包含4个属性花萼长度，花萼宽度，花瓣长度，花瓣宽度（sepal length，sepal width ，petal length ，petal width ）。</p>

<p>部分数据形式如下：
<img src="/img/in-post/PCA/1.png" width="400px" height="275px" /></p>

<p>PCA算法步骤：</p>
<ol>
  <li>对数据进行标准化，特征的均值标准化为0，方差标准化为1</li>
  <li>计算特征的协方差矩阵CovMat</li>
  <li>计算协方差矩阵的特征值eigval和对应的eigvec</li>
  <li>选取前k个大的eigval所对应的eigvec作为基组成转换矩阵</li>
  <li>将转换矩阵与原数据矩阵相乘得到降维结果</li>
</ol>

<p>代码实现：</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="n">data</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">'iris.csv'</span><span class="p">,</span><span class="n">index_col</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
<span class="n">data</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="n">values</span>

<span class="n">labels</span> <span class="o">=</span> <span class="n">data</span><span class="p">[:,</span><span class="mi">4</span><span class="p">]</span>
<span class="n">data</span> <span class="o">=</span> <span class="n">data</span><span class="p">[:,:</span><span class="mi">4</span><span class="p">]</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="n">meanvalue</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">mean</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
<span class="n">std</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">std</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
<span class="n">meanremove</span> <span class="o">=</span> <span class="p">(</span><span class="n">data</span> <span class="o">-</span> <span class="n">meanvalue</span><span class="p">)</span><span class="o">/</span><span class="n">std</span>
<span class="n">meanremove</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">matrix</span><span class="p">(</span><span class="n">meanremove</span><span class="p">,</span><span class="n">dtype</span><span class="o">=</span><span class="s">'float64'</span><span class="p">)</span>
<span class="n">covMat</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">cov</span><span class="p">(</span><span class="n">meanremove</span><span class="p">,</span><span class="n">rowvar</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>

<span class="n">eigval</span><span class="p">,</span><span class="n">eigvec</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">linalg</span><span class="o">.</span><span class="n">eig</span><span class="p">(</span><span class="n">covMat</span><span class="p">)</span>
<span class="n">tmpeig</span> <span class="o">=</span> <span class="n">eigval</span><span class="o">.</span><span class="n">copy</span><span class="p">()</span>

<span class="k">def</span> <span class="nf">chose_k</span><span class="p">(</span><span class="n">val</span><span class="p">):</span><span class="c1">#从大到小排列特征值，取累计占比超过95%的前k个特征
</span>    <span class="n">total</span> <span class="o">=</span> <span class="n">val</span><span class="o">.</span><span class="nb">sum</span><span class="p">()</span>
    <span class="n">length</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">val</span><span class="p">)</span>
    <span class="n">val</span><span class="o">.</span><span class="n">sort</span><span class="p">()</span>
    <span class="n">val</span> <span class="o">=</span> <span class="n">val</span><span class="p">[::</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
    <span class="n">p</span> <span class="o">=</span> <span class="p">[(</span><span class="n">val</span><span class="p">[:</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="nb">sum</span><span class="p">()</span><span class="o">/</span><span class="n">total</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">length</span><span class="p">)]</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">length</span><span class="p">):</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"第</span><span class="si">%</span><span class="s">d特征所占比例为:</span><span class="si">%</span><span class="s">f"</span><span class="o">%</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">p</span><span class="p">[</span><span class="n">i</span><span class="p">]))</span>
        <span class="k">if</span> <span class="n">p</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mf">0.95</span><span class="p">:</span>
            <span class="k">print</span><span class="p">(</span><span class="s">"前</span><span class="si">%</span><span class="s">d个特征所占比已超过0.95"</span><span class="o">%</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">))</span>
            <span class="k">break</span>
    <span class="k">return</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span>

<span class="n">k</span> <span class="o">=</span> <span class="n">chose_k</span><span class="p">(</span><span class="n">tmpeig</span><span class="p">)</span>
<span class="n">eigind</span> <span class="o">=</span> <span class="n">eigval</span><span class="o">.</span><span class="n">argsort</span><span class="p">()</span>
<span class="n">eigind</span> <span class="o">=</span> <span class="n">eigind</span><span class="p">[:</span><span class="o">-</span><span class="p">(</span><span class="n">k</span><span class="o">+</span><span class="mi">1</span><span class="p">):</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
<span class="n">P</span> <span class="o">=</span> <span class="n">eigvec</span><span class="p">[:,</span><span class="n">eigind</span><span class="p">]</span>
<span class="n">new_data</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">mat</span><span class="p">(</span><span class="n">meanremove</span><span class="p">)</span><span class="o">*</span><span class="n">np</span><span class="o">.</span><span class="n">mat</span><span class="p">(</span><span class="n">P</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">color</span><span class="p">():</span><span class="c1">#生成3个类别的标签所对应的颜色
</span>    <span class="n">co</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">3</span><span class="p">):</span>
        <span class="n">tmp</span> <span class="o">=</span> <span class="p">[</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">255</span><span class="p">)</span><span class="o">/</span><span class="mf">255.0</span><span class="p">,</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">255</span><span class="p">)</span><span class="o">/</span><span class="mf">255.0</span><span class="p">,</span><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">255</span><span class="p">)</span><span class="o">/</span><span class="mf">255.0</span><span class="p">]</span>
        <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">50</span><span class="p">):</span>
            <span class="n">co</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">tmp</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">co</span> 

<span class="n">co</span> <span class="o">=</span> <span class="n">color</span><span class="p">()</span>
<span class="n">plt</span><span class="o">.</span><span class="n">scatter</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">(</span><span class="n">new_data</span><span class="p">[:,</span><span class="mi">0</span><span class="p">]),</span><span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">(</span><span class="n">new_data</span><span class="p">[:,</span><span class="mi">1</span><span class="p">]),</span><span class="n">c</span><span class="o">=</span><span class="n">co</span><span class="p">)</span><span class="c1">#可视化
</span><span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>

<p>可视化结果为：</p>

<p><img src="/img/in-post/PCA/2.png" width="400px" height="275px" />、</p>

<p><a href="https://github.com/Givyuscss/Givyuscss.github.io/tree/master/code/PCA_datasets" title="code and data">获取数据</a></p>
:ET