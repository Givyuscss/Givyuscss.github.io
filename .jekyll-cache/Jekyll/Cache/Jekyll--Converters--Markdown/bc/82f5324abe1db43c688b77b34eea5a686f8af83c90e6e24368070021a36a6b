I"rE<h2 id="spectral-clustering">Spectral Clustering</h2>

<ul>
  <li>在看《A Survey on Multi-View Clustering》时，文中有提到，谱聚类是多视角聚类的重要基础算法，记录一下谱聚类的原理和算法实现。</li>
  <li>与Kmeans等“传统算法”相比，谱聚类有更好的性能且实现简单。</li>
</ul>

<hr />

<h3 id="1应用场景">1.应用场景</h3>

<p>给定一组数据点<script type="math/tex">\{x_1,x_2,...,x_n\}</script>，以及数据点之间的相似度<script type="math/tex">s_{ij}</script>，表示<script type="math/tex">x_i</script>和<script type="math/tex">x_j</script>数据点之间的相似度。将所有数据点分为K类。使得类内相似度高，类间相似度低。</p>

<h3 id="2算法工具">2.算法工具</h3>

<ul>
  <li>
    <p><strong>邻接矩阵<script type="math/tex">W</script></strong>：构建关于向量<script type="math/tex">V=\{v_1,v_2,...,v_n\}</script>的无向图<script type="math/tex">G(V,E)</script>，<script type="math/tex">W</script>为<script type="math/tex">G</script>的邻接矩阵，其中的<script type="math/tex">w_{ij}</script>表示<script type="math/tex">v_i,v_j</script>之间的连接权重。当<script type="math/tex">w_{ij}=0</script>时，表示两个向量无连接，且显然<script type="math/tex">w_{ij}=w_{ji}</script>。邻接矩阵<script type="math/tex">W</script>通过相似度矩阵<script type="math/tex">S</script>得到，有三种常见的方法：</p>

    <p><strong>1)<script type="math/tex">\epsilon</script>-邻近</strong>：根据相似度矩阵<script type="math/tex">S</script>中的<script type="math/tex">s_{ij}=||x_i-x_j||^2</script>
<script type="math/tex">% <![CDATA[
w_ij=
\begin{cases}
0,&s_{ij}>\epsilon\\
\epsilon,&s{ij}\leq \epsilon
\end{cases} %]]></script></p>

    <p><strong>2)K邻近</strong>:K邻近有两种方法，第一种是当两个向量同时在对方的K邻近中才满足，第二种是有一&gt;个向量在另一个向量的K邻近中即可，此时的<script type="math/tex">w_{ij}</script>均为:</p>

    <p><script type="math/tex">\begin{equation}
w_{ij}=w_{ji}=e^{\frac{||x_i-x_j||^2}{2\sigma^2}}
\end{equation}</script>
反之为0.</p>

    <table>
      <tbody>
        <tr>
          <td><strong>3)全连接（高斯）</strong>:$$w_{ij}=w_{ji}=e^{\frac{</td>
          <td> </td>
          <td>x_i-x_j</td>
          <td> </td>
          <td>^2}{2\sigma^2}}$$</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <p><strong>度矩阵<script type="math/tex">D</script></strong>：另设定关于向量族的度矩阵<script type="math/tex">D</script>，<script type="math/tex">d_{ij}=\sum^n_{j=1}w_{ij},w_{ij}\in W,d_{ij}\in D</script>。度矩阵被定义为对角元素为<script type="math/tex">[d_1,d_2,...,d_n]</script>的对角矩阵。</p>
  </li>
  <li>**拉普拉斯矩阵<script type="math/tex">LO$**：定义为正则化的拉普拉斯矩阵为</script>L=D-W$$</li>
  <li>
    <p><script type="math/tex">L</script>有如下性质：
1)<script type="math/tex">\forall f\in R^n,f^`Lf=\frac{1}{2}\sum^n_{i,j=1}w_{ij}(f_i-f_j)^2</script>
2)对称，半正定
3)最小特征值为0，对应常数特征项量1
4)有n个非负特征值，且<script type="math/tex">0=\lambda_1\leq \lambda_2\leq ...\leq \lambda_n</script></p>
  </li>
  <li>有两种正规化的方式：
1)随机游走：<script type="math/tex">L_{rw}=D^{-1}L=1-D^{-1}W</script>
2)对称：<script type="math/tex">L_{sym}=D^{-1/2}WD^{-1/2}</script></li>
</ul>

<h3 id="3未正规化谱聚类算法步骤">3.未正规化谱聚类算法步骤</h3>

<ol>
  <li>通过相似矩阵<script type="math/tex">S</script>建立邻接矩阵<script type="math/tex">W</script>，设定分类个数k</li>
  <li>通过邻接矩阵计算度矩阵<script type="math/tex">D</script></li>
  <li>计算拉普拉斯矩阵<script type="math/tex">L</script></li>
  <li>计算<script type="math/tex">L</script>的前k小的特征值所对应的特征向量<script type="math/tex">\{u_1,u_2,...,u_k\}</script></li>
  <li>将<script type="math/tex">\{u_1,u_2,...,u_k\}</script>中每个向量作为矩阵<script type="math/tex">U</script>的列</li>
  <li>设<script type="math/tex">y_i</script>为<script type="math/tex">U</script>中第i行的向量，即<script type="math/tex">y_1=[u_{11},u_{12},...,u_{1k}]</script></li>
  <li>采用Kmeans对<script type="math/tex">y_i,i=1,2,..,n</script>分类，分出结果<script type="math/tex">A_1,A_2,...,A_k</script></li>
</ol>

<p><strong>Python实现：</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">from</span> <span class="nn">sklearn</span> <span class="kn">import</span> <span class="n">datasets</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">from</span> <span class="nn">sklearn.cluster</span> <span class="kn">import</span> <span class="n">KMeans</span>
<span class="kn">import</span> <span class="nn">random</span>

<span class="c1">#生成数据点，make_moons生成为两个月牙形
</span><span class="k">def</span> <span class="nf">circle_data</span><span class="p">(</span><span class="n">num_sample</span><span class="o">=</span><span class="mi">500</span><span class="p">):</span>
    <span class="n">X</span><span class="p">,</span><span class="n">y</span><span class="o">=</span> <span class="n">datasets</span><span class="o">.</span><span class="n">make_moons</span><span class="p">(</span><span class="n">n_samples</span><span class="o">=</span><span class="n">num_sample</span><span class="p">,</span><span class="n">noise</span><span class="o">=</span><span class="mf">0.08</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">X</span><span class="p">,</span><span class="n">y</span>

<span class="c1">#生成邻接矩阵W
</span><span class="k">def</span> <span class="nf">w_matrix</span><span class="p">(</span><span class="n">sample_data</span><span class="p">):</span>
    <span class="n">length</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">sample_data</span><span class="p">)</span>
    <span class="n">W</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">zeros</span><span class="p">((</span><span class="n">length</span><span class="p">,</span><span class="n">length</span><span class="p">))</span>
    <span class="n">dis_matrix</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">zeros</span><span class="p">((</span><span class="n">length</span><span class="p">,</span><span class="n">length</span><span class="p">))</span>
    <span class="c1">#计算距离矩阵D
</span>    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">length</span><span class="p">):</span>
        <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">length</span><span class="p">):</span>
            <span class="n">dis_matrix</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">linalg</span><span class="o">.</span><span class="n">norm</span><span class="p">(</span><span class="n">sample_data</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">-</span> <span class="n">sample_data</span><span class="p">[</span><span class="n">j</span><span class="p">])</span>
            <span class="n">dis_matrix</span><span class="p">[</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">dis_matrix</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span>
    <span class="c1">#通过KNN生成邻接矩阵W
</span>    <span class="k">for</span> <span class="n">idx</span><span class="p">,</span><span class="n">each</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">dis_matrix</span><span class="p">):</span>
        <span class="n">index_array</span>  <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">argsort</span><span class="p">(</span><span class="n">each</span><span class="p">)</span>
        <span class="n">W</span><span class="p">[</span><span class="n">idx</span><span class="p">][</span><span class="n">index_array</span><span class="p">[</span><span class="mi">1</span><span class="p">:</span><span class="mi">10</span><span class="o">+</span><span class="mi">1</span><span class="p">]]</span> <span class="o">=</span> <span class="mi">1</span>  <span class="c1"># 距离最短的是自己
</span>    <span class="n">tmp_W</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">transpose</span><span class="p">(</span><span class="n">W</span><span class="p">)</span>
    <span class="n">W</span> <span class="o">=</span> <span class="p">(</span><span class="n">tmp_W</span><span class="o">+</span><span class="n">W</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span>
    <span class="k">return</span> <span class="n">W</span>

<span class="c1">#生成度矩阵D
</span><span class="k">def</span> <span class="nf">d_matrix</span><span class="p">(</span><span class="n">Wmatrix</span><span class="p">):</span>
    <span class="n">length</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">Wmatrix</span><span class="p">)</span>
    <span class="n">d</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">zeros</span><span class="p">((</span><span class="n">length</span><span class="p">,</span><span class="n">length</span><span class="p">))</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">length</span><span class="p">):</span>
        <span class="n">d</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="nb">sum</span><span class="p">(</span><span class="n">Wmatrix</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
    <span class="k">return</span> <span class="n">d</span>

<span class="c1">#生成随机颜色标记不同类别的数据点
</span><span class="k">def</span> <span class="nf">randRGB</span><span class="p">():</span>
    <span class="k">return</span> <span class="p">(</span><span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">255</span><span class="p">)</span><span class="o">/</span><span class="mf">255.0</span><span class="p">,</span>
            <span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">255</span><span class="p">)</span><span class="o">/</span><span class="mf">255.0</span><span class="p">,</span>
            <span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">255</span><span class="p">)</span><span class="o">/</span><span class="mf">255.0</span><span class="p">)</span>

<span class="c1">#根据数据点标签生成图像
</span><span class="k">def</span> <span class="nf">plot</span><span class="p">(</span><span class="n">matrix</span><span class="p">,</span><span class="n">C</span><span class="p">,</span><span class="n">n_clustering</span><span class="p">):</span>
    <span class="n">colors</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n_clustering</span><span class="p">):</span>
        <span class="n">colors</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">randRGB</span><span class="p">())</span>
    <span class="k">for</span> <span class="n">idx</span><span class="p">,</span><span class="n">value</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">C</span><span class="p">):</span>
        <span class="n">plt</span><span class="o">.</span><span class="n">scatter</span><span class="p">(</span><span class="n">matrix</span><span class="p">[</span><span class="n">idx</span><span class="p">][</span><span class="mi">0</span><span class="p">],</span><span class="n">matrix</span><span class="p">[</span><span class="n">idx</span><span class="p">][</span><span class="mi">1</span><span class="p">],</span><span class="n">color</span><span class="o">=</span><span class="n">colors</span><span class="p">[</span><span class="nb">int</span><span class="p">(</span><span class="n">C</span><span class="p">[</span><span class="n">idx</span><span class="p">])])</span>
    <span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>

<span class="c1">#预设参数
</span><span class="n">num_sample</span> <span class="o">=</span> <span class="mi">500</span>
<span class="n">n_clustering</span> <span class="o">=</span> <span class="mi">2</span>

<span class="c1">#生成W，D，L矩阵
</span><span class="n">X</span><span class="p">,</span><span class="n">_</span> <span class="o">=</span> <span class="n">circle_data</span><span class="p">(</span><span class="n">num_sample</span><span class="p">)</span>
<span class="n">W</span> <span class="o">=</span> <span class="n">w_matrix</span><span class="p">(</span><span class="n">X</span><span class="p">)</span>
<span class="n">D</span> <span class="o">=</span> <span class="n">d_matrix</span><span class="p">(</span><span class="n">W</span><span class="p">)</span>
<span class="n">L</span> <span class="o">=</span> <span class="n">D</span> <span class="o">-</span> <span class="n">W</span>

<span class="c1">#计算拉普拉斯矩阵的特征值和特征向量
</span><span class="n">x</span><span class="p">,</span><span class="n">V</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">linalg</span><span class="o">.</span><span class="n">eig</span><span class="p">(</span><span class="n">L</span><span class="p">)</span>
<span class="n">dim</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
<span class="n">dictEigval</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">(</span><span class="nb">zip</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="n">dim</span><span class="p">)))</span>
<span class="c1">#排序并选取前K个特征值所对应的特征向量
</span><span class="n">kEig</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="n">x</span><span class="p">)[</span><span class="mi">0</span><span class="p">:</span><span class="n">n_clustering</span><span class="p">]</span>
<span class="n">ix</span> <span class="o">=</span> <span class="p">[</span><span class="n">dictEigval</span><span class="p">[</span><span class="n">k</span><span class="p">]</span> <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="n">kEig</span><span class="p">]</span>
<span class="n">x</span><span class="p">,</span><span class="n">V</span> <span class="o">=</span> <span class="n">x</span><span class="p">[</span><span class="n">ix</span><span class="p">],</span><span class="n">V</span><span class="p">[:,</span><span class="n">ix</span><span class="p">]</span>

<span class="c1">#用KMeans对特征向量聚类
</span><span class="n">sp_cluster</span> <span class="o">=</span> <span class="n">KMeans</span><span class="p">(</span><span class="n">n_clusters</span><span class="o">=</span><span class="n">n_clustering</span><span class="p">)</span><span class="o">.</span><span class="n">fit</span><span class="p">(</span><span class="n">V</span><span class="p">)</span>
<span class="n">plot</span><span class="p">(</span><span class="n">X</span><span class="p">,</span><span class="n">sp_cluster</span><span class="o">.</span><span class="n">labels_</span><span class="p">,</span><span class="n">n_clustering</span><span class="o">=</span><span class="n">n_clustering</span><span class="p">)</span>
</code></pre></div></div>

<p>聚类效果对比：</p>

<p>Spectral clustering:</p>

<p><img src="/img/in-post/clustering/result_sp.png" width="400px" height="275px" /></p>

<p>Kmeans：</p>

<p><img src="/img/in-post/clustering/result_km.png" width="400px" height="275px" /></p>
:ET